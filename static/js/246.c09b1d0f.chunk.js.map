{"version":3,"file":"static/js/246.c09b1d0f.chunk.js","mappings":"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","sources":["pages/BlogPostPage.jsx"],"sourcesContent":["// src/pages/BlogPostPage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet-async'; // Import Helmet\r\nimport Container from \"../components/layout/Container\";\r\nimport blogPosts from \"../data/blogPosts\"; // Import your blog data\r\nimport ReactMarkdown from \"react-markdown\"; // Import markdown renderer\r\n\r\n// Optional: Add Tailwind Typography for nice Markdown styling\r\n// Install: npm install -D @tailwindcss/typography\r\n// Add to tailwind.config.js plugins: [require('@tailwindcss/typography')]\r\n\r\nconst BlogPostPage = () => {\r\n  const { slug } = useParams(); // Get the slug from the URL\r\n  const navigate = useNavigate();\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Find the post that matches the slug\r\n    const foundPost = blogPosts.find((p) => p.slug === slug);\r\n    if (foundPost) {\r\n      setPost(foundPost);\r\n    } else {\r\n      console.error(\"Post not found for slug:\", slug);\r\n      // Optionally navigate to a 404 page or back to the blog\r\n      // navigate('/404'); or navigate('/blog');\r\n    }\r\n    setLoading(false);\r\n  }, [slug, navigate]); // Rerun effect if slug changes\r\n\r\n  if (loading) {\r\n    return (\r\n      // Apply page background\r\n      <div className=\"pt-32 pb-16 text-center bg-base-white font-body\"> {/* Added font-body */}\r\n        <Container>Loading post...</Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!post) {\r\n    // ... (Post not found JSX - consider adding Helmet here too for 404)\r\n    return (\r\n      <div className=\"pt-32 pb-16 text-center bg-base-white\">\r\n        <Helmet>\r\n           <title>Post Not Found | SimpliChef Blog</title>\r\n           <meta name=\"description\" content=\"Sorry, the blog post you were looking for could not be found.\" />\r\n        </Helmet>\r\n        <Container>\r\n          {/* Apply heading font and color */}\r\n          <h1 className=\"text-3xl font-heading font-bold text-deep-teal mb-4\">Post Not Found</h1>\r\n          {/* Apply body font and color */}\r\n          <p className=\"font-body text-charcoal mb-6\"> {/* Added font-body */}\r\n            Sorry, we couldn't find the post you were looking for.\r\n          </p>\r\n          {/* Apply link font and color */}\r\n          <Link\r\n            to=\"/blog\"\r\n            className=\"font-heading font-medium text-mint-green hover:text-deep-teal\" /* Changed to font-heading font-medium */\r\n          >\r\n            &larr; Back to Blog\r\n          </Link>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Format the date\r\n  const formattedDate = new Date(post.date).toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n\r\n  const pageUrl = `https://www.simplichef.com/blog/${post.slug}`; // Replace with actual domain\r\n  const pageTitle = `${post.title} | SimpliChef Blog`;\r\n  // Use excerpt for description, ensure it's under 160 chars or truncate\r\n  const pageDescription = post.excerpt.length > 155 ? post.excerpt.substring(0, 152) + '...' : post.excerpt;\r\n  // Construct absolute image URL if post.image is relative\r\n  const imageUrl = post.image.startsWith('http') ? post.image : `https://www.simplichef.com${post.image}`; // Adjust base URL as needed\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"description\" content={pageDescription} />\r\n        {/* Open Graph Tags */}\r\n        <meta property=\"og:title\" content={pageTitle} />\r\n        <meta property=\"og:description\" content={pageDescription} />\r\n        <meta property=\"og:url\" content={pageUrl} />\r\n        <meta property=\"og:image\" content={imageUrl} />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        <meta property=\"article:published_time\" content={new Date(post.date).toISOString()} />\r\n        {/* Add author tag if available: <meta property=\"article:author\" content=\"Author Name\" /> */}\r\n        {/* Add tags if available: post.tags.map(tag => <meta property=\"article:tag\" content={tag} key={tag} />) */}\r\n        {/* Twitter Card Tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={pageTitle} />\r\n        <meta name=\"twitter:description\" content={pageDescription} />\r\n        <meta name=\"twitter:image\" content={imageUrl} />\r\n        {/* Add Twitter site/creator if available: <meta name=\"twitter:site\" content=\"@SimpliChefApp\" /> */}\r\n      </Helmet>\r\n      {/* Apply page background */}\r\n      <div className=\"pt-32 pb-16 bg-base-white\">\r\n        <Container className=\"max-w-4xl mx-auto\">\r\n          <article>\r\n            {/* Post Header */}\r\n            <header className=\"mb-8 border-b border-light-gray pb-6\"> {/* Use light-gray for border */}\r\n              <div className=\"mb-4\">\r\n                {/* Apply link font and color */}\r\n                <Link\r\n                  to=\"/blog\"\r\n                  className=\"text-sm font-heading font-medium text-mint-green hover:text-deep-teal inline-flex items-center\" /* Changed to font-heading font-medium */\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-4 w-4 mr-1\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M15 19l-7-7 7-7\"\r\n                    />\r\n                  </svg>\r\n                  Back to Blog\r\n                </Link>\r\n              </div>\r\n              {/* Apply heading font and color */}\r\n              <h1 className=\"text-4xl md:text-5xl font-heading font-bold text-deep-teal mb-3 leading-tight\">\r\n                {post.title}\r\n              </h1>\r\n              {/* Apply metadata font and color */}\r\n              <div className=\"font-body text-fog-gray text-sm\">\r\n                <span>Published on {formattedDate}</span>\r\n                <span className=\"mx-2\">&bull;</span>\r\n                <span>Category: {post.category}</span>\r\n              </div>\r\n            </header>\r\n\r\n            {/* Optional: Featured Image */}\r\n            {post.image && (\r\n              <div className=\"mb-8 rounded-lg overflow-hidden shadow-md\">\r\n                <img\r\n                  src={post.image}\r\n                  alt={post.imageAlt || post.title} // Use specific alt text, fallback to title\r\n                  className=\"w-full h-auto max-h-96 object-cover\"\r\n                  loading=\"lazy\" // Add lazy loading\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Post Content - Apply prose styles via tailwind.config.js */}\r\n            <div className=\"prose prose-lg max-w-none\">\r\n              <ReactMarkdown>{post.content}</ReactMarkdown>\r\n            </div>\r\n          </article>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogPostPage;\r\n"],"names":["BlogPostPage","slug","useParams","navigate","useNavigate","post","setPost","useState","loading","setLoading","useEffect","foundPost","blogPosts","find","p","console","error","_jsxs","className","children","_jsx","Container","Helmet","name","content","Link","to","formattedDate","Date","date","toLocaleDateString","year","month","day","pageUrl","pageTitle","title","pageDescription","excerpt","length","substring","imageUrl","image","startsWith","_Fragment","property","toISOString","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","category","src","alt","imageAlt","ReactMarkdown"],"sourceRoot":""}