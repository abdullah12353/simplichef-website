{"version":3,"file":"static/js/606.388b4fdc.chunk.js","mappings":"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","sources":["components/ui/Card.jsx","components/ui/AnimatedSection.jsx","components/blog/BlogCard.jsx","components/blog/BlogGrid.jsx","pages/BlogPage.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({\r\n  children,\r\n  className = \"\",\r\n  hover = false,\r\n  shadow = \"md\",\r\n  padding = \"md\",\r\n  rounded = \"xl\",\r\n}) => {\r\n  const shadowClasses = {\r\n    none: \"\",\r\n    sm: \"shadow-sm\",\r\n    md: \"shadow\",\r\n    lg: \"shadow-lg\",\r\n    xl: \"shadow-xl\",\r\n  };\r\n\r\n  const paddingClasses = {\r\n    none: \"p-0\",\r\n    sm: \"p-3\",\r\n    md: \"p-5\",\r\n    lg: \"p-7\",\r\n    xl: \"p-9\",\r\n  };\r\n\r\n  const roundedClasses = {\r\n    none: \"rounded-none\",\r\n    sm: \"rounded-sm\",\r\n    md: \"rounded-md\",\r\n    lg: \"rounded-lg\",\r\n    xl: \"rounded-xl\",\r\n    full: \"rounded-full\",\r\n  };\r\n\r\n  const hoverClasses = hover\r\n    ? \"transition-transform duration-300 hover:-translate-y-1 hover:shadow-lg\"\r\n    : \"\";\r\n\r\n  return (\r\n    <div\r\n      className={`bg-base-white ${shadowClasses[shadow]} ${paddingClasses[padding]} ${roundedClasses[rounded]} ${hoverClasses} ${className}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst AnimatedSection = ({\r\n  children,\r\n  animation = \"fade-in\",\r\n  threshold = 0.1,\r\n  className = \"\",\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const sectionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setIsVisible(true);\r\n          observer.unobserve(entry.target);\r\n        }\r\n      },\r\n      {\r\n        threshold,\r\n      }\r\n    );\r\n\r\n    const currentRef = sectionRef.current;\r\n    if (currentRef) {\r\n      observer.observe(currentRef);\r\n    }\r\n\r\n    return () => {\r\n      if (currentRef) {\r\n        observer.unobserve(currentRef);\r\n      }\r\n    };\r\n  }, [threshold]);\r\n\r\n  const animationClasses = {\r\n    \"fade-in\": \"opacity-0 transition-opacity duration-700\",\r\n    \"slide-up\": \"opacity-0 translate-y-10 transition-all duration-700\",\r\n    \"slide-in-right\": \"opacity-0 translate-x-10 transition-all duration-700\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={sectionRef}\r\n      className={`${animationClasses[animation]} ${\r\n        isVisible\r\n          ? \"opacity-100 translate-y-0 translate-x-0\"\r\n          : \"\"\r\n      } ${className}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimatedSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../ui/Card\";\r\n\r\nconst BlogCard = ({ post }) => {\r\n  // Determine category tag style\r\n  const categoryStyle = post.category === \"Recipes\" \r\n    ? \"bg-deep-teal text-white\" \r\n    : \"bg-berry-purple text-white\"; // Example: Use berry-purple for other categories\r\n\r\n  return (\r\n    <article>\r\n      <Card className=\"h-full flex flex-col\" hover={true} rounded=\"xl\">\r\n        <Link to={`/blog/${post.slug}`} className=\"block\">\r\n          <div className=\"relative h-48 mb-4 overflow-hidden rounded-t-xl\">\r\n            <img\r\n              src={post.image}\r\n              alt={post.imageAlt || post.title} // Use specific alt text, fallback to title\r\n              className=\"w-full h-full object-cover transition-transform duration-300 hover:scale-105\"\r\n              loading=\"lazy\" // Add lazy loading\r\n            />\r\n            {/* Apply dynamic category tag style */}\r\n            <div className={`absolute top-0 right-0 text-xs font-heading font-medium px-2 py-1 m-2 rounded ${categoryStyle}`}>\r\n              {post.category}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n        <div className=\"flex-grow p-5 pt-0\">\r\n          {/* Apply metadata font and color */}\r\n          <div className=\"font-body text-fog-gray text-sm mb-2\">\r\n            {new Date(post.date).toLocaleDateString(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            })}\r\n          </div>\r\n          {/* Apply heading font, color, and hover */}\r\n          <h3 className=\"text-xl font-heading font-semibold mb-2 transition-colors\">\r\n            <Link\r\n              to={`/blog/${post.slug}`}\r\n              className=\"text-deep-teal hover:text-mint-green\"\r\n            >\r\n              {post.title}\r\n            </Link>\r\n          </h3>\r\n          {/* Apply body font and color */}\r\n          <p className=\"font-body text-charcoal mb-4\">{post.excerpt}</p>\r\n          {/* Apply link font, color, and hover */}\r\n          <Link\r\n            to={`/blog/${post.slug}`}\r\n            className=\"font-heading font-medium text-mint-green hover:text-deep-teal transition-colors inline-flex items-center\"\r\n          >\r\n            Read More\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-4 w-4 ml-1\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M9 5l7 7-7 7\"\r\n              />\r\n            </svg>\r\n          </Link>\r\n        </div>\r\n      </Card>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default BlogCard;\r\n","import React from \"react\";\r\nimport BlogCard from \"./BlogCard\";\r\nimport AnimatedSection from \"../ui/AnimatedSection\";\r\n\r\nconst BlogGrid = ({ posts }) => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n      {posts.map((post, index) => (\r\n        <AnimatedSection\r\n          key={post.id}\r\n          animation=\"slide-up\"\r\n          threshold={0.1}\r\n          className=\"h-full\"\r\n        >\r\n          <BlogCard post={post} />\r\n        </AnimatedSection>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogGrid;\r\n","import React from \"react\";\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Container from \"../components/layout/Container\";\r\nimport BlogGrid from \"../components/blog/BlogGrid\";\r\nimport blogPosts from \"../data/blogPosts\";\r\n\r\nconst BlogPage = () => {\r\n  const pageUrl = \"https://www.simplichef.com/blog\"; // Replace with actual domain later\r\n  const pageTitle = \"SimpliChef Blog | Cooking Tips & Confidence Boosters\";\r\n  const pageDescription = \"Explore tips, tricks, and inspiration from the SimpliChef blog to build your cooking skills and confidence in the kitchen.\";\r\n  const imageUrl = `${pageUrl}/logo512.png`; // Use a suitable image URL, maybe a generic blog banner\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"description\" content={pageDescription} />\r\n        {/* Open Graph Tags */}\r\n        <meta property=\"og:title\" content={pageTitle} />\r\n        <meta property=\"og:description\" content={pageDescription} />\r\n        <meta property=\"og:url\" content={pageUrl} />\r\n        <meta property=\"og:image\" content={imageUrl} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        {/* Twitter Card Tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={pageTitle} />\r\n        <meta name=\"twitter:description\" content={pageDescription} />\r\n        <meta name=\"twitter:image\" content={imageUrl} />\r\n      </Helmet>\r\n      {/* Use base-white for the main page container */}\r\n      <div className=\"pt-32 pb-16 bg-base-white\">\r\n        {/* Use light-gray for the introductory section */}\r\n        <section className=\"py-12 bg-light-gray\">\r\n          <Container>\r\n            <div className=\"text-center max-w-3xl mx-auto\">\r\n              {/* Apply heading font and color */}\r\n              <h1 className=\"text-4xl md:text-5xl font-heading font-bold text-deep-teal mb-4\">\r\n                Cooking for Confidence\r\n              </h1>\r\n              {/* Apply body font and color */}\r\n              <p className=\"text-xl font-body text-charcoal\">\r\n                Tips, tricks, and inspiration to help you build cooking skills and\r\n                confidence in the kitchen.\r\n              </p>\r\n            </div>\r\n          </Container>\r\n        </section>\r\n\r\n        {/* Main blog grid section */}\r\n        <section className=\"py-16\">\r\n          <Container>\r\n            <BlogGrid posts={blogPosts} />\r\n          </Container>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n"],"names":["_ref","children","className","hover","shadow","padding","rounded","hoverClasses","_jsx","none","sm","md","lg","xl","full","animation","threshold","isVisible","setIsVisible","useState","sectionRef","useRef","useEffect","observer","IntersectionObserver","_ref2","entry","isIntersecting","unobserve","target","currentRef","current","observe","ref","post","categoryStyle","category","_jsxs","Card","Link","to","slug","src","image","alt","imageAlt","title","loading","Date","date","toLocaleDateString","year","month","day","excerpt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","posts","map","index","AnimatedSection","BlogCard","id","BlogPage","pageUrl","pageTitle","pageDescription","imageUrl","_Fragment","Helmet","name","content","property","Container","BlogGrid","blogPosts"],"sourceRoot":""}